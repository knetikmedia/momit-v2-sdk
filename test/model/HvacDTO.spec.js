/**
 * Momit API
 * momit API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MomitApi);
  }
}(this, function(expect, MomitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MomitApi.HvacDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HvacDTO', function() {
    it('should create an instance of HvacDTO', function() {
      // uncomment below and update the code to test HvacDTO
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be.a(MomitApi.HvacDTO);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property inertial (base name: "inertial")', function() {
      // uncomment below and update the code to test the property inertial
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property systemType (base name: "systemType")', function() {
      // uncomment below and update the code to test the property systemType
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property respInfo (base name: "respInfo")', function() {
      // uncomment below and update the code to test the property respInfo
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property powerSupplyType (base name: "powerSupplyType")', function() {
      // uncomment below and update the code to test the property powerSupplyType
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property coolingType (base name: "coolingType")', function() {
      // uncomment below and update the code to test the property coolingType
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property heatingType (base name: "heatingType")', function() {
      // uncomment below and update the code to test the property heatingType
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property fanType (base name: "fanType")', function() {
      // uncomment below and update the code to test the property fanType
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property obCool (base name: "obCool")', function() {
      // uncomment below and update the code to test the property obCool
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property gh (base name: "gh")', function() {
      // uncomment below and update the code to test the property gh
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property gm (base name: "gm")', function() {
      // uncomment below and update the code to test the property gm
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property auxE (base name: "auxE")', function() {
      // uncomment below and update the code to test the property auxE
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property ob (base name: "ob")', function() {
      // uncomment below and update the code to test the property ob
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property b (base name: "b")', function() {
      // uncomment below and update the code to test the property b
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property o (base name: "o")', function() {
      // uncomment below and update the code to test the property o
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property ggl (base name: "ggl")', function() {
      // uncomment below and update the code to test the property ggl
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property y2 (base name: "y2")', function() {
      // uncomment below and update the code to test the property y2
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property yy1 (base name: "yy1")', function() {
      // uncomment below and update the code to test the property yy1
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property w2 (base name: "w2")', function() {
      // uncomment below and update the code to test the property w2
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property ww1 (base name: "ww1")', function() {
      // uncomment below and update the code to test the property ww1
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property rc (base name: "rc")', function() {
      // uncomment below and update the code to test the property rc
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property rrh (base name: "rrh")', function() {
      // uncomment below and update the code to test the property rrh
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

    it('should have the property c (base name: "c")', function() {
      // uncomment below and update the code to test the property c
      //var instane = new MomitApi.HvacDTO();
      //expect(instance).to.be();
    });

  });

}));
