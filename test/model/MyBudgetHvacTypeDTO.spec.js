/**
 * Momit API
 * momit API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MomitApi);
  }
}(this, function(expect, MomitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MomitApi.MyBudgetHvacTypeDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MyBudgetHvacTypeDTO', function() {
    it('should create an instance of MyBudgetHvacTypeDTO', function() {
      // uncomment below and update the code to test MyBudgetHvacTypeDTO
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be.a(MomitApi.MyBudgetHvacTypeDTO);
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property hvacTypeId (base name: "hvacTypeId")', function() {
      // uncomment below and update the code to test the property hvacTypeId
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property inertial (base name: "inertial")', function() {
      // uncomment below and update the code to test the property inertial
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releOBCool (base name: "releOBCool")', function() {
      // uncomment below and update the code to test the property releOBCool
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releGH (base name: "releGH")', function() {
      // uncomment below and update the code to test the property releGH
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releGM (base name: "releGM")', function() {
      // uncomment below and update the code to test the property releGM
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releAUXE (base name: "releAUXE")', function() {
      // uncomment below and update the code to test the property releAUXE
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releOB (base name: "releOB")', function() {
      // uncomment below and update the code to test the property releOB
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releB (base name: "releB")', function() {
      // uncomment below and update the code to test the property releB
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releO (base name: "releO")', function() {
      // uncomment below and update the code to test the property releO
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releGGL (base name: "releGGL")', function() {
      // uncomment below and update the code to test the property releGGL
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releY2 (base name: "releY2")', function() {
      // uncomment below and update the code to test the property releY2
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releYY1 (base name: "releYY1")', function() {
      // uncomment below and update the code to test the property releYY1
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releW2 (base name: "releW2")', function() {
      // uncomment below and update the code to test the property releW2
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releWW1 (base name: "releWW1")', function() {
      // uncomment below and update the code to test the property releWW1
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releRC (base name: "releRC")', function() {
      // uncomment below and update the code to test the property releRC
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releRRH (base name: "releRRH")', function() {
      // uncomment below and update the code to test the property releRRH
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property releC (base name: "releC")', function() {
      // uncomment below and update the code to test the property releC
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property systemType (base name: "systemType")', function() {
      // uncomment below and update the code to test the property systemType
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property respInfo (base name: "respInfo")', function() {
      // uncomment below and update the code to test the property respInfo
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property powerSupplyType (base name: "powerSupplyType")', function() {
      // uncomment below and update the code to test the property powerSupplyType
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property coolingType (base name: "coolingType")', function() {
      // uncomment below and update the code to test the property coolingType
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property heatingType (base name: "heatingType")', function() {
      // uncomment below and update the code to test the property heatingType
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property fanType (base name: "fanType")', function() {
      // uncomment below and update the code to test the property fanType
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

    it('should have the property defaultTimeBlocker (base name: "defaultTimeBlocker")', function() {
      // uncomment below and update the code to test the property defaultTimeBlocker
      //var instane = new MomitApi.MyBudgetHvacTypeDTO();
      //expect(instance).to.be();
    });

  });

}));
